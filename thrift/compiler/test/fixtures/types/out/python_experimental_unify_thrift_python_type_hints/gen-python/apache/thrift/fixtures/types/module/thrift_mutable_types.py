
# EXPERIMENTAL - DO NOT USE !!!
# See `experimental_generate_mutable_types` documentation in thrift compiler

#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations

import folly.iobuf as _fbthrift_iobuf
import apache.thrift.fixtures.types.module.thrift_abstract_types
import thrift.python.types as _fbthrift_python_types
import thrift.python.mutable_types as _fbthrift_python_mutable_types
import thrift.python.mutable_exceptions as _fbthrift_python_mutable_exceptions
import thrift.python.mutable_typeinfos as _fbthrift_python_mutable_typeinfos


import apache.thrift.fixtures.types.included.thrift_mutable_types


@apache.thrift.fixtures.types.module.thrift_abstract_types.empty_struct.register
class empty_struct(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.empty_struct"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/empty_struct"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.empty_struct, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.decorated_struct.register
class decorated_struct(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "field",  # name
            "field",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            8, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.decorated_struct"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/decorated_struct"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.decorated_struct, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.ContainerStruct.register
class ContainerStruct(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "fieldB",  # name
            "fieldB",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            3,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "fieldC",  # name
            "fieldC",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            4,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "fieldD",  # name
            "fieldD",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            5,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "fieldE",  # name
            "fieldE",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            6,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "fieldF",  # name
            "fieldF",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableSetTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            15, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            7,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "fieldG",  # name
            "fieldG",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableMapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            16, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "fieldH",  # name
            "fieldH",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableMapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            16, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            12,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "fieldA",  # name
            "fieldA",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.ContainerStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/ContainerStruct"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.ContainerStruct, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.CppTypeStruct.register
class CppTypeStruct(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "fieldA",  # name
            "fieldA",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.CppTypeStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/CppTypeStruct"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.CppTypeStruct, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.VirtualStruct.register
class VirtualStruct(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "MyIntField",  # name
            "MyIntField",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            5, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.VirtualStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/VirtualStruct"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.VirtualStruct, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.MyStructWithForwardRefEnum.register
class MyStructWithForwardRefEnum(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "a",  # name
            "a",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.EnumTypeInfo(MyForwardRefEnum),  # typeinfo
            lambda: MyForwardRefEnum.NONZERO,  # default value
            None,  # adapter info
            False, # field type is primitive
            10, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "b",  # name
            "b",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.EnumTypeInfo(MyForwardRefEnum),  # typeinfo
            lambda: MyForwardRefEnum.NONZERO,  # default value
            None,  # adapter info
            False, # field type is primitive
            10, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyStructWithForwardRefEnum"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/MyStructWithForwardRefEnum"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.MyStructWithForwardRefEnum, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.TrivialNumeric.register
class TrivialNumeric(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "a",  # name
            "a",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "b",  # name
            "b",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            1, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.TrivialNumeric"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/TrivialNumeric"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.TrivialNumeric, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.TrivialNestedWithDefault.register
class TrivialNestedWithDefault(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "z",  # name
            "z",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            4,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "n",  # name
            "n",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(TrivialNumeric),  # typeinfo
            lambda: TrivialNumeric(a=3, b=True),  # default value
            None,  # adapter info
            False, # field type is primitive
            11, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.TrivialNestedWithDefault"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/TrivialNestedWithDefault"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.TrivialNestedWithDefault, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.ComplexString.register
class ComplexString(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "a",  # name
            "a",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            8, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "b",  # name
            "b",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableMapTypeInfo(_fbthrift_python_types.typeinfo_string, _fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            16, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.ComplexString"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/ComplexString"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.ComplexString, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.ComplexNestedWithDefault.register
class ComplexNestedWithDefault(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "z",  # name
            "z",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            "4",  # default value
            None,  # adapter info
            False, # field type is primitive
            8, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "n",  # name
            "n",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(ComplexString),  # typeinfo
            lambda: ComplexString(a="3", b=_fbthrift_python_types.Map(_fbthrift_python_types.typeinfo_string, _fbthrift_python_types.typeinfo_i32, { "a": 3})),  # default value
            None,  # adapter info
            False, # field type is primitive
            11, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.ComplexNestedWithDefault"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/ComplexNestedWithDefault"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.ComplexNestedWithDefault, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.MinPadding.register
class MinPadding(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "small",  # name
            "small",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_byte,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            2, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "big",  # name
            "big",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            5, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            3,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "medium",  # name
            "medium",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i16,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            3, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            4,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "biggish",  # name
            "biggish",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            5,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "tiny",  # name
            "tiny",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_byte,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            2, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MinPadding"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/MinPadding"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.MinPadding, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.MinPaddingWithCustomType.register
class MinPaddingWithCustomType(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "small",  # name
            "small",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_byte,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            2, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "big",  # name
            "big",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            5, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            3,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "medium",  # name
            "medium",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i16,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            3, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            4,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "biggish",  # name
            "biggish",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            5,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "tiny",  # name
            "tiny",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_byte,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            2, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MinPaddingWithCustomType"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/MinPaddingWithCustomType"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.MinPaddingWithCustomType, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.MyStruct.register
class MyStruct(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "MyIntField",  # name
            "MyIntField",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            5, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "MyStringField",  # name
            "MyStringField",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            8, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            3,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "majorVer",  # name
            "majorVer",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            5, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            4,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "data",  # name
            "data",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(MyDataItem),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            11, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/MyStruct"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.MyStruct, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.MyDataItem.register
class MyDataItem(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyDataItem"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/MyDataItem"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.MyDataItem, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.Renaming.register
class Renaming(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "foo",  # name
            "foo",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            5, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.Renaming"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/Renaming"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.Renaming, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.AnnotatedTypes.register
class AnnotatedTypes(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "binary_field",  # name
            "binary_field",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_binary,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            9, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "list_field",  # name
            "list_field",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_mutable_typeinfos.MutableMapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.typeinfo_string)),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.AnnotatedTypes"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/AnnotatedTypes"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.AnnotatedTypes, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.ForwardUsageRoot.register
class ForwardUsageRoot(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "ForwardUsageStruct",  # name
            "ForwardUsageStruct",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(ForwardUsageStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            11, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "ForwardUsageByRef",  # name
            "ForwardUsageByRef",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(ForwardUsageByRef),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            11, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.ForwardUsageRoot"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/ForwardUsageRoot"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.ForwardUsageRoot, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.ForwardUsageStruct.register
class ForwardUsageStruct(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "foo",  # name
            "foo",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(ForwardUsageRoot),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            11, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.ForwardUsageStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/ForwardUsageStruct"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.ForwardUsageStruct, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.ForwardUsageByRef.register
class ForwardUsageByRef(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "foo",  # name
            "foo",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(ForwardUsageRoot),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            11, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.ForwardUsageByRef"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/ForwardUsageByRef"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.ForwardUsageByRef, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.IncompleteMap.register
class IncompleteMap(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "field",  # name
            "field",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableMapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(IncompleteMapDep)),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            16, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.IncompleteMap"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/IncompleteMap"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.IncompleteMap, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.IncompleteMapDep.register
class IncompleteMapDep(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.IncompleteMapDep"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/IncompleteMapDep"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.IncompleteMapDep, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.CompleteMap.register
class CompleteMap(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "field",  # name
            "field",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableMapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(CompleteMapDep)),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            16, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.CompleteMap"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/CompleteMap"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.CompleteMap, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.CompleteMapDep.register
class CompleteMapDep(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.CompleteMapDep"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/CompleteMapDep"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.CompleteMapDep, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.IncompleteList.register
class IncompleteList(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "field",  # name
            "field",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(IncompleteListDep)),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.IncompleteList"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/IncompleteList"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.IncompleteList, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.IncompleteListDep.register
class IncompleteListDep(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.IncompleteListDep"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/IncompleteListDep"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.IncompleteListDep, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.CompleteList.register
class CompleteList(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "field",  # name
            "field",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(CompleteListDep)),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.CompleteList"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/CompleteList"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.CompleteList, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.CompleteListDep.register
class CompleteListDep(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.CompleteListDep"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/CompleteListDep"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.CompleteListDep, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.AdaptedList.register
class AdaptedList(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "field",  # name
            "field",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(AdaptedListDep)),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.AdaptedList"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/AdaptedList"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.AdaptedList, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.AdaptedListDep.register
class AdaptedListDep(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "field",  # name
            "field",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(AdaptedList),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            11, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.AdaptedListDep"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/AdaptedListDep"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.AdaptedListDep, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.DependentAdaptedList.register
class DependentAdaptedList(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "field",  # name
            "field",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_mutable_typeinfos.MutableStructTypeInfo(DependentAdaptedListDep)),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.DependentAdaptedList"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/DependentAdaptedList"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.DependentAdaptedList, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.DependentAdaptedListDep.register
class DependentAdaptedListDep(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "field",  # name
            "field",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i16,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            3, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.DependentAdaptedListDep"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/DependentAdaptedListDep"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.DependentAdaptedListDep, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.AllocatorAware.register
class AllocatorAware(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "aa_list",  # name
            "aa_list",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "aa_set",  # name
            "aa_set",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableSetTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            15, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            3,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "aa_map",  # name
            "aa_map",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableMapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            16, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            4,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "aa_string",  # name
            "aa_string",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            8, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            5,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "not_a_container",  # name
            "not_a_container",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            6,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "aa_unique",  # name
            "aa_unique",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            7,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "aa_shared",  # name
            "aa_shared",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.AllocatorAware"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/AllocatorAware"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.AllocatorAware, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.AllocatorAware2.register
class AllocatorAware2(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "not_a_container",  # name
            "not_a_container",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "box_field",  # name
            "box_field",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.AllocatorAware2"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/AllocatorAware2"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.AllocatorAware2, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.TypedefStruct.register
class TypedefStruct(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "i32_field",  # name
            "i32_field",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "IntTypedef_field",  # name
            "IntTypedef_field",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            3,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "UintTypedef_field",  # name
            "UintTypedef_field",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.TypedefStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/TypedefStruct"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.TypedefStruct, self)

    def _to_mutable_python(self):
        return self


@apache.thrift.fixtures.types.module.thrift_abstract_types.StructWithDoubleUnderscores.register
class StructWithDoubleUnderscores(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "__field",  # name
            "_StructWithDoubleUnderscores__field",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
            4, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.StructWithDoubleUnderscores"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/StructWithDoubleUnderscores"

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")


    def _to_python(self):
        import thrift.python.converter
        import importlib
        immutable_types = importlib.import_module("apache.thrift.fixtures.types.module.thrift_types")
        return thrift.python.converter.to_python_struct(immutable_types.StructWithDoubleUnderscores, self)

    def _to_mutable_python(self):
        return self



class has_bitwise_ops(_fbthrift_python_types.Enum, int):
    none = 0
    zero = 1
    one = 2
    two = 4
    three = 8
    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.has_bitwise_ops"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/has_bitwise_ops"

    @staticmethod
    def __get_metadata__():
        return apache.thrift.fixtures.types.module.thrift_metadata.gen_metadata_enum_has_bitwise_ops()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.fixtures.types.module.types")
        return py3_types.has_bitwise_ops(self.value)

    def _to_py_deprecated(self):
        return self.value


class is_unscoped(_fbthrift_python_types.Enum, int):
    hello = 0
    world = 1
    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.is_unscoped"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/is_unscoped"

    @staticmethod
    def __get_metadata__():
        return apache.thrift.fixtures.types.module.thrift_metadata.gen_metadata_enum_is_unscoped()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.fixtures.types.module.types")
        return py3_types.is_unscoped(self.value)

    def _to_py_deprecated(self):
        return self.value


class MyForwardRefEnum(_fbthrift_python_types.Enum, int):
    ZERO = 0
    NONZERO = 12
    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyForwardRefEnum"

    @staticmethod
    def __get_thrift_uri__():
        return "apache.org/thrift/fixtures/types/MyForwardRefEnum"

    @staticmethod
    def __get_metadata__():
        return apache.thrift.fixtures.types.module.thrift_metadata.gen_metadata_enum_MyForwardRefEnum()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("apache.thrift.fixtures.types.module.types")
        return py3_types.MyForwardRefEnum(self.value)

    def _to_py_deprecated(self):
        return self.value


_fbthrift_all_enums = [
    has_bitwise_ops,
    is_unscoped,
    MyForwardRefEnum,
]

_fbthrift_all_structs = [
    empty_struct,
    decorated_struct,
    ContainerStruct,
    CppTypeStruct,
    VirtualStruct,
    MyStructWithForwardRefEnum,
    TrivialNumeric,
    TrivialNestedWithDefault,
    ComplexString,
    ComplexNestedWithDefault,
    MinPadding,
    MinPaddingWithCustomType,
    MyStruct,
    MyDataItem,
    Renaming,
    AnnotatedTypes,
    ForwardUsageRoot,
    ForwardUsageStruct,
    ForwardUsageByRef,
    IncompleteMap,
    IncompleteMapDep,
    CompleteMap,
    CompleteMapDep,
    IncompleteList,
    IncompleteListDep,
    CompleteList,
    CompleteListDep,
    AdaptedList,
    AdaptedListDep,
    DependentAdaptedList,
    DependentAdaptedListDep,
    AllocatorAware,
    AllocatorAware2,
    TypedefStruct,
    StructWithDoubleUnderscores,
]
_fbthrift_python_mutable_types.fill_specs(*_fbthrift_all_structs)

TBinary = bytes
IntTypedef = int
UintTypedef = int
SomeListOfTypeMap_2468 = _fbthrift_python_types.ListTypeFactory(_fbthrift_python_mutable_typeinfos.MutableMapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.typeinfo_string))
TBinary_8623 = bytes
i32_9314 = int
list_i32_9187 = _fbthrift_python_types.ListTypeFactory(_fbthrift_python_types.typeinfo_i32)
map_i32_i32_9565 = _fbthrift_python_types.MapTypeFactory(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.typeinfo_i32)
map_i32_string_1261 = _fbthrift_python_types.MapTypeFactory(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.typeinfo_string)
set_i32_7070 = _fbthrift_python_types.SetTypeFactory(_fbthrift_python_types.typeinfo_i32)
set_i32_7194 = _fbthrift_python_types.SetTypeFactory(_fbthrift_python_types.typeinfo_i32)
string_5252 = str



class _fbthrift_SomeService_bounce_map_args(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "m",  # name
            "m",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableMapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            16, # IDL type (see BaseTypeEnum)
        ),
    )


class _fbthrift_SomeService_bounce_map_result(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            0,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "success",  # name
            "success", # name
            lambda: _fbthrift_python_mutable_typeinfos.MutableMapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
    )


class _fbthrift_SomeService_binary_keyed_map_args(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "r",  # name
            "r",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_mutable_typeinfos.MutableListTypeInfo(_fbthrift_python_types.typeinfo_i64),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            14, # IDL type (see BaseTypeEnum)
        ),
    )


class _fbthrift_SomeService_binary_keyed_map_result(metaclass=_fbthrift_python_mutable_types.MutableStructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            0,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "success",  # name
            "success", # name
            lambda: _fbthrift_python_mutable_typeinfos.MutableMapTypeInfo(_fbthrift_python_types.typeinfo_binary, _fbthrift_python_types.typeinfo_i64),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
    )



_fbthrift_python_mutable_types.fill_specs(
    _fbthrift_SomeService_bounce_map_args,
    _fbthrift_SomeService_bounce_map_result,
    _fbthrift_SomeService_binary_keyed_map_args,
    _fbthrift_SomeService_binary_keyed_map_result,
)
